// Prefer usage of composition
class CustomHeaderBehavior(
    private val contract: CustomHeaderBehavior.Contract
) {

    fun onCreate(activity: Activity) {
        activity.apply {
            findViewById<TextView>(R.id.header_custom_title).text =
                getString(contract.getCustomTitle()) // HEADER
        }
    }

    interface Contract {
        fun getCustomTitle(): Int
    }
}

class TrackingBehavior(
    private val contract: TrackingBehavior.Contract
) {

    fun onCreate() {
        TrackingService.track(contract.getName()) // TRACKING
    }

    interface Contract {
        fun getName(): String
    }
}

class PresenterBehavior<T, S>(
    val presenter: S,
    private val contract: Contract<T>
) where T : ContractView, S: ContractPresenter<T> {

    fun onStart() {
        presenter.subscribe(contract.getView()) // PRESENTER
    }

    fun onStop() {
        presenter.unsubscribe() // PRESENTER
    }

    interface Contract<T> {
        fun getView(): T
    }
}